name: "Build and populate cache"
on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '0 7 * * *'
jobs:
  linux-build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        nurRepo:
          - <YOUR_REPO_NAME>
        nixPath:
          - nixpkgs=channel:nixos-unstable
          - nixpkgs=channel:nixpkgs-unstable
          - nixpkgs=channel:nixos-22.11
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: "${{ matrix.nixPath }}"
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Show nixpkgs version
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
      - name: Check evaluation
        run: |
          nix-env -f . -qa \* --meta --xml \
            --allowed-uris https://static.rust-lang.org \
            --option restrict-eval true \
            --option allow-import-from-derivation true \
            --drv-path --show-trace \
            -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
            -I $PWD
      - name: Build nix packages
        run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs
      - name: Trigger NUR update
        # Don't replace <YOUR_REPO_NAME> here!
        if: ${{ matrix.nurRepo != '<YOUR_REPO_NAME>' }}
        run: curl -XPOST "https://nur-update.nix-community.org/update?repo=${{ matrix.nurRepo }}"
  macos-build:
    strategy:
      matrix:
        os: [macos-latest]
        nurRepo:
          - <YOUR_REPO_NAME>
        nixPath:
          - nixpkgs=channel:nixpkgs-unstable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: "${{ matrix.nixPath }}"
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Show nixpkgs version
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
      - name: Check evaluation
        run: |
          nix-env -f . -qa \* --meta --xml \
            --allowed-uris https://static.rust-lang.org \
            --option restrict-eval true \
            --option allow-import-from-derivation true \
            --drv-path --show-trace \
            -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
            -I $PWD
      - name: Build nix packages
        run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs
      - name: Trigger NUR update
        # Don't replace <YOUR_REPO_NAME> here!
        if: ${{ matrix.nurRepo != '<YOUR_REPO_NAME>' }}
        run: curl -XPOST "https://nur-update.nix-community.org/update?repo=${{ matrix.nurRepo }}"
